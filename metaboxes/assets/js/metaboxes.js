(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";

(function ($) {
  $(document).ready(function () {
    $('[data-vue]').each(function () {
      var $this = $(this);
      var data_var = $this.attr('data-vue');
      var data_source = $this.attr('data-source');
      new Vue({
        el: $(this)[0],
        data: function data() {
          return {
            loading: false,
            data: ''
          };
        },
        mounted: function mounted() {
          this.getSettings();
          this.clearEmptyGroups();
        },
        methods: {
          initSubmenu: function initSubmenu() {
            Vue.nextTick().then(function () {
              (function ($) {
                /*Hide all fields in submenu*/
                var submenu_tab_fields = $('.wpcfto-tab.has-submenu-items [data-field], .wpcfto-tab.has-submenu-items .wpcfto_group_started');
                submenu_tab_fields.css({
                  display: 'none'
                });
                var $sub_menu = $('.wpcfto-submenus .active');
                var sub_menu_section = $sub_menu.attr('data-submenu');
                var $submenu_section = $('.' + sub_menu_section);
                $submenu_section.removeAttr('style');
                submenu_tab_fields.parents('.wpcfto_group_started').css({
                  display: 'none'
                });
                $submenu_section.parents('.wpcfto_group_started').removeAttr('style');
              })(jQuery);
            });
          },
          changeTabFromAnchor: function changeTabFromAnchor() {
            var _this = this;

            var hash = window.location.hash;
            var hashParts = hash.split('#');

            if (typeof hashParts[1] !== 'undefined') {
              Vue.nextTick(function () {
                _this.changeTab(hashParts[1]);
              });
            }
          },
          changeTab: function changeTab(tab) {
            var $tab = $('#' + tab);
            $tab.closest('.stm_metaboxes_grid__inner').find('.wpcfto-tab').removeClass('active');
            $tab.addClass('active');
            var $section = $('div[data-section="' + tab + '"]');
            $tab.closest('.wpcfto-settings').find('.wpcfto-nav').removeClass('active');
            $tab.closest('.stm_metaboxes_grid__inner').find('.wpcfto-nav').removeClass('active');
            $section.closest('.wpcfto-nav').addClass('active');
            history.pushState(null, null, '#' + tab);
            /*if has submenu*/

            if ($section.closest('.wpcfto-nav').hasClass('has-submenu')) {
              var $submenu = $section.closest('.wpcfto-nav').find('.wpcfto-submenus [data-submenu]').eq(0);
              this.changeSubMenu($submenu.attr('data-submenu'));
            }
            /*Scroll top*/


            $("html, body").animate({
              scrollTop: $tab.closest('.stm_metaboxes_grid__inner').offset().top - 100
            }, "fast");
          },
          changeSubMenu: function changeSubMenu(sub_menu) {
            var $submenu = $('[data-submenu="' + sub_menu + '"]');
            $('[data-submenu]').removeClass('active');
            $submenu.addClass('active');
            this.initSubmenu();
          },
          getSettings: function getSettings() {
            var _this = this;

            _this.loading = true;
            this.$http.get(stm_wpcfto_ajaxurl + '?action=stm_wpcfto_get_settings&source=' + data_source + '&name=' + data_var).then(function (r) {
              _this.$set(_this, 'data', r.body);

              _this.loading = false;
              this.changeTabFromAnchor();
              this.initSubmenu();
            });
          },
          saveSettings: function saveSettings(id) {
            var vm = this;
            vm.loading = true;
            this.$http.post(stm_wpcfto_ajaxurl + '?action=wpcfto_save_settings&nonce=' + stm_wpcfto_nonces['wpcfto_save_settings'] + '&name=' + id, JSON.stringify(vm.data)).then(function (response) {
              var _response$body;

              vm.loading = false;
              if (((_response$body = response.body) === null || _response$body === void 0 ? void 0 : _response$body.reload) === true) location.reload();
            });
          },
          initOpen: function initOpen(field) {
            if (typeof field.opened === 'undefined') {
              this.$set(field, 'opened', !!field.value);
            }
          },
          openField: function openField(field) {
            var opened = !field.opened;
            this.$set(field, 'opened', opened);

            if (!field.opened) {
              this.$set(field, 'value', '');
            }
          },
          enableAddon: function enableAddon($event, option) {
            var _this = this;

            Vue.nextTick(function () {
              (function ($) {
                var currentItem = $($event.target);
                currentItem.addClass('loading');
                var url = stm_wpcfto_ajaxurl + '?action=stm_lms_enable_addon&addon=' + option;

                _this.$http.get(url).then(function (response) {
                  currentItem.removeClass('loading');
                  var $container = $('.stm_lms_addon_group_settings_' + option);
                  $container.each(function () {
                    var $this = $(this);
                    $this.removeClass('is_pro is_pro_in_addon');
                    $this.find('.field_overlay').remove();
                    $this.find('.pro-notice').remove();
                  });
                });
              })(jQuery);
            });
          },
          clearEmptyGroups: function clearEmptyGroups() {
            Vue.nextTick().then(function () {
              (function ($) {
                $('.wpcfto_group_started').each(function () {
                  var $group = $(this);
                  var $childs = $group.find('.wpcfto-box-child');

                  if (!$childs.length) {
                    $group.addClass('no-childs-visible');
                  } else {
                    $group.removeClass('no-childs-visible');
                  }
                });
              })(jQuery);
            });
          }
        },
        watch: {
          data: {
            deep: true,
            handler: function handler() {
              var _this = this;

              setTimeout(function () {
                _this.clearEmptyGroups();

                _this.initSubmenu();
              }, 100);
            }
          }
        }
      });
    });
  });
})(jQuery);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZha2VfNDI1MTYxYmUuanMiXSwibmFtZXMiOlsiJCIsImRvY3VtZW50IiwicmVhZHkiLCJlYWNoIiwiJHRoaXMiLCJkYXRhX3ZhciIsImF0dHIiLCJkYXRhX3NvdXJjZSIsIlZ1ZSIsImVsIiwiZGF0YSIsImxvYWRpbmciLCJtb3VudGVkIiwiZ2V0U2V0dGluZ3MiLCJjbGVhckVtcHR5R3JvdXBzIiwibWV0aG9kcyIsImluaXRTdWJtZW51IiwibmV4dFRpY2siLCJ0aGVuIiwic3VibWVudV90YWJfZmllbGRzIiwiY3NzIiwiZGlzcGxheSIsIiRzdWJfbWVudSIsInN1Yl9tZW51X3NlY3Rpb24iLCIkc3VibWVudV9zZWN0aW9uIiwicmVtb3ZlQXR0ciIsInBhcmVudHMiLCJqUXVlcnkiLCJjaGFuZ2VUYWJGcm9tQW5jaG9yIiwiX3RoaXMiLCJoYXNoIiwid2luZG93IiwibG9jYXRpb24iLCJoYXNoUGFydHMiLCJzcGxpdCIsImNoYW5nZVRhYiIsInRhYiIsIiR0YWIiLCJjbG9zZXN0IiwiZmluZCIsInJlbW92ZUNsYXNzIiwiYWRkQ2xhc3MiLCIkc2VjdGlvbiIsImhpc3RvcnkiLCJwdXNoU3RhdGUiLCJoYXNDbGFzcyIsIiRzdWJtZW51IiwiZXEiLCJjaGFuZ2VTdWJNZW51IiwiYW5pbWF0ZSIsInNjcm9sbFRvcCIsIm9mZnNldCIsInRvcCIsInN1Yl9tZW51IiwiJGh0dHAiLCJnZXQiLCJzdG1fd3BjZnRvX2FqYXh1cmwiLCJyIiwiJHNldCIsImJvZHkiLCJzYXZlU2V0dGluZ3MiLCJpZCIsInZtIiwicG9zdCIsInN0bV93cGNmdG9fbm9uY2VzIiwiSlNPTiIsInN0cmluZ2lmeSIsInJlc3BvbnNlIiwiX3Jlc3BvbnNlJGJvZHkiLCJyZWxvYWQiLCJpbml0T3BlbiIsImZpZWxkIiwib3BlbmVkIiwidmFsdWUiLCJvcGVuRmllbGQiLCJlbmFibGVBZGRvbiIsIiRldmVudCIsIm9wdGlvbiIsImN1cnJlbnRJdGVtIiwidGFyZ2V0IiwidXJsIiwiJGNvbnRhaW5lciIsInJlbW92ZSIsIiRncm91cCIsIiRjaGlsZHMiLCJsZW5ndGgiLCJ3YXRjaCIsImRlZXAiLCJoYW5kbGVyIiwic2V0VGltZW91dCJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsQ0FBQyxVQUFVQSxDQUFWLEVBQWE7QUFDWkEsRUFBQUEsQ0FBQyxDQUFDQyxRQUFELENBQUQsQ0FBWUMsS0FBWixDQUFrQixZQUFZO0FBQzVCRixJQUFBQSxDQUFDLENBQUMsWUFBRCxDQUFELENBQWdCRyxJQUFoQixDQUFxQixZQUFZO0FBQy9CLFVBQUlDLEtBQUssR0FBR0osQ0FBQyxDQUFDLElBQUQsQ0FBYjtBQUNBLFVBQUlLLFFBQVEsR0FBR0QsS0FBSyxDQUFDRSxJQUFOLENBQVcsVUFBWCxDQUFmO0FBQ0EsVUFBSUMsV0FBVyxHQUFHSCxLQUFLLENBQUNFLElBQU4sQ0FBVyxhQUFYLENBQWxCO0FBQ0EsVUFBSUUsR0FBSixDQUFRO0FBQ05DLFFBQUFBLEVBQUUsRUFBRVQsQ0FBQyxDQUFDLElBQUQsQ0FBRCxDQUFRLENBQVIsQ0FERTtBQUVOVSxRQUFBQSxJQUFJLEVBQUUsU0FBU0EsSUFBVCxHQUFnQjtBQUNwQixpQkFBTztBQUNMQyxZQUFBQSxPQUFPLEVBQUUsS0FESjtBQUVMRCxZQUFBQSxJQUFJLEVBQUU7QUFGRCxXQUFQO0FBSUQsU0FQSztBQVFORSxRQUFBQSxPQUFPLEVBQUUsU0FBU0EsT0FBVCxHQUFtQjtBQUMxQixlQUFLQyxXQUFMO0FBQ0EsZUFBS0MsZ0JBQUw7QUFDRCxTQVhLO0FBWU5DLFFBQUFBLE9BQU8sRUFBRTtBQUNQQyxVQUFBQSxXQUFXLEVBQUUsU0FBU0EsV0FBVCxHQUF1QjtBQUNsQ1IsWUFBQUEsR0FBRyxDQUFDUyxRQUFKLEdBQWVDLElBQWYsQ0FBb0IsWUFBWTtBQUM5QixlQUFDLFVBQVVsQixDQUFWLEVBQWE7QUFDWjtBQUNBLG9CQUFJbUIsa0JBQWtCLEdBQUduQixDQUFDLENBQUMsaUdBQUQsQ0FBMUI7QUFDQW1CLGdCQUFBQSxrQkFBa0IsQ0FBQ0MsR0FBbkIsQ0FB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O0FBQ1pBLGdCQUFBQSxDQUFDLENBQUMsdUJBQUQsQ0FBRCxDQUEyQkcsSUFBM0IsQ0FBZ0MsWUFBWTtBQUMxQyxzQkFBSWdGLE1BQU0sR0FBR25GLENBQUMsQ0FBQyxJQUFELENBQWQ7QUFDQSxzQkFBSW9GLE9BQU8sR0FBR0QsTUFBTSxDQUFDNUMsSUFBUCxDQUFZLG1CQUFaLENBQWQ7O0FBRUEsc0JBQUksQ0FBQzZDLE9BQU8sQ0FBQ0MsTUFBYixFQUFxQjtBQUNuQkYsb0JBQUFBLE1BQU0sQ0FBQzFDLFFBQVAsQ0FBZ0IsbUJBQWhCO0FBQ0QsbUJBRkQsTUFFTztBQUNMMEMsb0JBQUFBLE1BQU0sQ0FBQzNDLFdBQVAsQ0FBbUIsbUJBQW5CO0FBQ0Q7QUFDRixpQkFURDtBQVVELGVBWEQsRUFXR2IsTUFYSDtBQVlELGFBYkQ7QUFjRDtBQXBJTSxTQVpIO0FBa0pOMkQsUUFBQUEsS0FBSyxFQUFFO0FBQ0w1RSxVQUFBQSxJQUFJLEVBQUU7QUFDSjZFLFlBQUFBLElBQUksRUFBRSxJQURGO0FBRUpDLFlBQUFBLE9BQU8sRUFBRSxTQUFTQSxPQUFULEdBQW1CO0FBQzFCLGtCQUFJM0QsS0FBSyxHQUFHLElBQVo7O0FBRUE0RCxjQUFBQSxVQUFVLENBQUMsWUFBWTtBQUNyQjVELGdCQUFBQSxLQUFLLENBQUNmLGdCQUFOOztBQUVBZSxnQkFBQUEsS0FBSyxDQUFDYixXQUFOO0FBQ0QsZUFKUyxFQUlQLEdBSk8sQ0FBVjtBQUtEO0FBVkc7QUFERDtBQWxKRCxPQUFSO0FBaUtELEtBcktEO0FBc0tELEdBdktEO0FBd0tELENBektELEVBeUtHVyxNQXpLSCIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4oZnVuY3Rpb24gKCQpIHtcbiAgJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24gKCkge1xuICAgICQoJ1tkYXRhLXZ1ZV0nKS5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciAkdGhpcyA9ICQodGhpcyk7XG4gICAgICB2YXIgZGF0YV92YXIgPSAkdGhpcy5hdHRyKCdkYXRhLXZ1ZScpO1xuICAgICAgdmFyIGRhdGFfc291cmNlID0gJHRoaXMuYXR0cignZGF0YS1zb3VyY2UnKTtcbiAgICAgIG5ldyBWdWUoe1xuICAgICAgICBlbDogJCh0aGlzKVswXSxcbiAgICAgICAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHtcbiAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbG9hZGluZzogZmFsc2UsXG4gICAgICAgICAgICBkYXRhOiAnJ1xuICAgICAgICAgIH07XG4gICAgICAgIH0sXG4gICAgICAgIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7XG4gICAgICAgICAgdGhpcy5nZXRTZXR0aW5ncygpO1xuICAgICAgICAgIHRoaXMuY2xlYXJFbXB0eUdyb3VwcygpO1xuICAgICAgICB9LFxuICAgICAgICBtZXRob2RzOiB7XG4gICAgICAgICAgaW5pdFN1Ym1lbnU6IGZ1bmN0aW9uIGluaXRTdWJtZW51KCkge1xuICAgICAgICAgICAgVnVlLm5leHRUaWNrKCkudGhlbihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgIChmdW5jdGlvbiAoJCkge1xuICAgICAgICAgICAgICAgIC8qSGlkZSBhbGwgZmllbGRzIGluIHN1Ym1lbnUqL1xuICAgICAgICAgICAgICAgIHZhciBzdWJtZW51X3RhYl9maWVsZHMgPSAkKCcud3BjZnRvLXRhYi5oYXMtc3VibWVudS1pdGVtcyBbZGF0YS1maWVsZF0sIC53cGNmdG8tdGFiLmhhcy1zdWJtZW51LWl0ZW1zIC53cGNmdG9fZ3JvdXBfc3RhcnRlZCcpO1xuICAgICAgICAgICAgICAgIHN1Ym1lbnVfdGFiX2ZpZWxkcy5jc3Moe1xuICAgICAgICAgICAgICAgICAgZGlzcGxheTogJ25vbmUnXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgdmFyICRzdWJfbWVudSA9ICQoJy53cGNmdG8tc3VibWVudXMgLmFjdGl2ZScpO1xuICAgICAgICAgICAgICAgIHZhciBzdWJfbWVudV9zZWN0aW9uID0gJHN1Yl9tZW51LmF0dHIoJ2RhdGEtc3VibWVudScpO1xuICAgICAgICAgICAgICAgIHZhciAkc3VibWVudV9zZWN0aW9uID0gJCgnLicgKyBzdWJfbWVudV9zZWN0aW9uKTtcbiAgICAgICAgICAgICAgICAkc3VibWVudV9zZWN0aW9uLnJlbW92ZUF0dHIoJ3N0eWxlJyk7XG4gICAgICAgICAgICAgICAgc3VibWVudV90YWJfZmllbGRzLnBhcmVudHMoJy53cGNmdG9fZ3JvdXBfc3RhcnRlZCcpLmNzcyh7XG4gICAgICAgICAgICAgICAgICBkaXNwbGF5OiAnbm9uZSdcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAkc3VibWVudV9zZWN0aW9uLnBhcmVudHMoJy53cGNmdG9fZ3JvdXBfc3RhcnRlZCcpLnJlbW92ZUF0dHIoJ3N0eWxlJyk7XG4gICAgICAgICAgICAgIH0pKGpRdWVyeSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIGNoYW5nZVRhYkZyb21BbmNob3I6IGZ1bmN0aW9uIGNoYW5nZVRhYkZyb21BbmNob3IoKSB7XG4gICAgICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICAgICAgICB2YXIgaGFzaCA9IHdpbmRvdy5sb2NhdGlvbi5oYXNoO1xuICAgICAgICAgICAgdmFyIGhhc2hQYXJ0cyA9IGhhc2guc3BsaXQoJyMnKTtcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBoYXNoUGFydHNbMV0gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgIFZ1ZS5uZXh0VGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuY2hhbmdlVGFiKGhhc2hQYXJ0c1sxXSk7XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgY2hhbmdlVGFiOiBmdW5jdGlvbiBjaGFuZ2VUYWIodGFiKSB7XG4gICAgICAgICAgICB2YXIgJHRhYiA9ICQoJyMnICsgdGFiKTtcbiAgICAgICAgICAgICR0YWIuY2xvc2VzdCgnLnN0bV9tZXRhYm94ZXNfZ3JpZF9faW5uZXInKS5maW5kKCcud3BjZnRvLXRhYicpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcbiAgICAgICAgICAgICR0YWIuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xuICAgICAgICAgICAgdmFyICRzZWN0aW9uID0gJCgnZGl2W2RhdGEtc2VjdGlvbj1cIicgKyB0YWIgKyAnXCJdJyk7XG4gICAgICAgICAgICAkdGFiLmNsb3Nlc3QoJy53cGNmdG8tc2V0dGluZ3MnKS5maW5kKCcud3BjZnRvLW5hdicpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcbiAgICAgICAgICAgICR0YWIuY2xvc2VzdCgnLnN0bV9tZXRhYm94ZXNfZ3JpZF9faW5uZXInKS5maW5kKCcud3BjZnRvLW5hdicpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcbiAgICAgICAgICAgICRzZWN0aW9uLmNsb3Nlc3QoJy53cGNmdG8tbmF2JykuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xuICAgICAgICAgICAgaGlzdG9yeS5wdXNoU3RhdGUobnVsbCwgbnVsbCwgJyMnICsgdGFiKTtcbiAgICAgICAgICAgIC8qaWYgaGFzIHN1Ym1lbnUqL1xuXG4gICAgICAgICAgICBpZiAoJHNlY3Rpb24uY2xvc2VzdCgnLndwY2Z0by1uYXYnKS5oYXNDbGFzcygnaGFzLXN1Ym1lbnUnKSkge1xuICAgICAgICAgICAgICB2YXIgJHN1Ym1lbnUgPSAkc2VjdGlvbi5jbG9zZXN0KCcud3BjZnRvLW5hdicpLmZpbmQoJy53cGNmdG8tc3VibWVudXMgW2RhdGEtc3VibWVudV0nKS5lcSgwKTtcbiAgICAgICAgICAgICAgdGhpcy5jaGFuZ2VTdWJNZW51KCRzdWJtZW51LmF0dHIoJ2RhdGEtc3VibWVudScpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8qU2Nyb2xsIHRvcCovXG5cblxuICAgICAgICAgICAgJChcImh0bWwsIGJvZHlcIikuYW5pbWF0ZSh7XG4gICAgICAgICAgICAgIHNjcm9sbFRvcDogJHRhYi5jbG9zZXN0KCcuc3RtX21ldGFib3hlc19ncmlkX19pbm5lcicpLm9mZnNldCgpLnRvcCAtIDEwMFxuICAgICAgICAgICAgfSwgXCJmYXN0XCIpO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgY2hhbmdlU3ViTWVudTogZnVuY3Rpb24gY2hhbmdlU3ViTWVudShzdWJfbWVudSkge1xuICAgICAgICAgICAgdmFyICRzdWJtZW51ID0gJCgnW2RhdGEtc3VibWVudT1cIicgKyBzdWJfbWVudSArICdcIl0nKTtcbiAgICAgICAgICAgICQoJ1tkYXRhLXN1Ym1lbnVdJykucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xuICAgICAgICAgICAgJHN1Ym1lbnUuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xuICAgICAgICAgICAgdGhpcy5pbml0U3VibWVudSgpO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgZ2V0U2V0dGluZ3M6IGZ1bmN0aW9uIGdldFNldHRpbmdzKCkge1xuICAgICAgICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgICAgICAgX3RoaXMubG9hZGluZyA9IHRydWU7XG4gICAgICAgICAgICB0aGlzLiRodHRwLmdldChzdG1fd3BjZnRvX2FqYXh1cmwgKyAnP2FjdGlvbj1zdG1fd3BjZnRvX2dldF9zZXR0aW5ncyZzb3VyY2U9JyArIGRhdGFfc291cmNlICsgJyZuYW1lPScgKyBkYXRhX3ZhcikudGhlbihmdW5jdGlvbiAocikge1xuICAgICAgICAgICAgICBfdGhpcy4kc2V0KF90aGlzLCAnZGF0YScsIHIuYm9keSk7XG5cbiAgICAgICAgICAgICAgX3RoaXMubG9hZGluZyA9IGZhbHNlO1xuICAgICAgICAgICAgICB0aGlzLmNoYW5nZVRhYkZyb21BbmNob3IoKTtcbiAgICAgICAgICAgICAgdGhpcy5pbml0U3VibWVudSgpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBzYXZlU2V0dGluZ3M6IGZ1bmN0aW9uIHNhdmVTZXR0aW5ncyhpZCkge1xuICAgICAgICAgICAgdmFyIHZtID0gdGhpcztcbiAgICAgICAgICAgIHZtLmxvYWRpbmcgPSB0cnVlO1xuICAgICAgICAgICAgdGhpcy4kaHR0cC5wb3N0KHN0bV93cGNmdG9fYWpheHVybCArICc/YWN0aW9uPXdwY2Z0b19zYXZlX3NldHRpbmdzJm5vbmNlPScgKyBzdG1fd3BjZnRvX25vbmNlc1snd3BjZnRvX3NhdmVfc2V0dGluZ3MnXSArICcmbmFtZT0nICsgaWQsIEpTT04uc3RyaW5naWZ5KHZtLmRhdGEpKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgICAgICAgICB2YXIgX3Jlc3BvbnNlJGJvZHk7XG5cbiAgICAgICAgICAgICAgdm0ubG9hZGluZyA9IGZhbHNlO1xuICAgICAgICAgICAgICBpZiAoKChfcmVzcG9uc2UkYm9keSA9IHJlc3BvbnNlLmJvZHkpID09PSBudWxsIHx8IF9yZXNwb25zZSRib2R5ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfcmVzcG9uc2UkYm9keS5yZWxvYWQpID09PSB0cnVlKSBsb2NhdGlvbi5yZWxvYWQoKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgaW5pdE9wZW46IGZ1bmN0aW9uIGluaXRPcGVuKGZpZWxkKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIGZpZWxkLm9wZW5lZCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgdGhpcy4kc2V0KGZpZWxkLCAnb3BlbmVkJywgISFmaWVsZC52YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBvcGVuRmllbGQ6IGZ1bmN0aW9uIG9wZW5GaWVsZChmaWVsZCkge1xuICAgICAgICAgICAgdmFyIG9wZW5lZCA9ICFmaWVsZC5vcGVuZWQ7XG4gICAgICAgICAgICB0aGlzLiRzZXQoZmllbGQsICdvcGVuZWQnLCBvcGVuZWQpO1xuXG4gICAgICAgICAgICBpZiAoIWZpZWxkLm9wZW5lZCkge1xuICAgICAgICAgICAgICB0aGlzLiRzZXQoZmllbGQsICd2YWx1ZScsICcnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIGVuYWJsZUFkZG9uOiBmdW5jdGlvbiBlbmFibGVBZGRvbigkZXZlbnQsIG9wdGlvbikge1xuICAgICAgICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgICAgICAgVnVlLm5leHRUaWNrKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgKGZ1bmN0aW9uICgkKSB7XG4gICAgICAgICAgICAgICAgdmFyIGN1cnJlbnRJdGVtID0gJCgkZXZlbnQudGFyZ2V0KTtcbiAgICAgICAgICAgICAgICBjdXJyZW50SXRlbS5hZGRDbGFzcygnbG9hZGluZycpO1xuICAgICAgICAgICAgICAgIHZhciB1cmwgPSBzdG1fd3BjZnRvX2FqYXh1cmwgKyAnP2FjdGlvbj1zdG1fbG1zX2VuYWJsZV9hZGRvbiZhZGRvbj0nICsgb3B0aW9uO1xuXG4gICAgICAgICAgICAgICAgX3RoaXMuJGh0dHAuZ2V0KHVybCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgICAgICAgICAgIGN1cnJlbnRJdGVtLnJlbW92ZUNsYXNzKCdsb2FkaW5nJyk7XG4gICAgICAgICAgICAgICAgICB2YXIgJGNvbnRhaW5lciA9ICQoJy5zdG1fbG1zX2FkZG9uX2dyb3VwX3NldHRpbmdzXycgKyBvcHRpb24pO1xuICAgICAgICAgICAgICAgICAgJGNvbnRhaW5lci5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyICR0aGlzID0gJCh0aGlzKTtcbiAgICAgICAgICAgICAgICAgICAgJHRoaXMucmVtb3ZlQ2xhc3MoJ2lzX3BybyBpc19wcm9faW5fYWRkb24nKTtcbiAgICAgICAgICAgICAgICAgICAgJHRoaXMuZmluZCgnLmZpZWxkX292ZXJsYXknKS5yZW1vdmUoKTtcbiAgICAgICAgICAgICAgICAgICAgJHRoaXMuZmluZCgnLnByby1ub3RpY2UnKS5yZW1vdmUoKTtcbiAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICB9KShqUXVlcnkpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBjbGVhckVtcHR5R3JvdXBzOiBmdW5jdGlvbiBjbGVhckVtcHR5R3JvdXBzKCkge1xuICAgICAgICAgICAgVnVlLm5leHRUaWNrKCkudGhlbihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgIChmdW5jdGlvbiAoJCkge1xuICAgICAgICAgICAgICAgICQoJy53cGNmdG9fZ3JvdXBfc3RhcnRlZCcpLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgdmFyICRncm91cCA9ICQodGhpcyk7XG4gICAgICAgICAgICAgICAgICB2YXIgJGNoaWxkcyA9ICRncm91cC5maW5kKCcud3BjZnRvLWJveC1jaGlsZCcpO1xuXG4gICAgICAgICAgICAgICAgICBpZiAoISRjaGlsZHMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgICRncm91cC5hZGRDbGFzcygnbm8tY2hpbGRzLXZpc2libGUnKTtcbiAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICRncm91cC5yZW1vdmVDbGFzcygnbm8tY2hpbGRzLXZpc2libGUnKTtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgfSkoalF1ZXJ5KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgd2F0Y2g6IHtcbiAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICBkZWVwOiB0cnVlLFxuICAgICAgICAgICAgaGFuZGxlcjogZnVuY3Rpb24gaGFuZGxlcigpIHtcbiAgICAgICAgICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5jbGVhckVtcHR5R3JvdXBzKCk7XG5cbiAgICAgICAgICAgICAgICBfdGhpcy5pbml0U3VibWVudSgpO1xuICAgICAgICAgICAgICB9LCAxMDApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSk7XG4gIH0pO1xufSkoalF1ZXJ5KTsiXX0=
},{}]},{},[1])